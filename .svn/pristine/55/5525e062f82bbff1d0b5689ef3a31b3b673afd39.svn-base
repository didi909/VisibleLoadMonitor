# -*- coding: utf-8 -*-
#__author__="ZJL"

from flask import Flask
from flask import request
from flask import Response
import pymysql
import configparser
import json
import time
import datetime
import random


#读取数据库配置文件
db = configparser.ConfigParser()
db.read('conf/database.conf')

host=db.get('db', 'host')
port=db.get('db', 'port')
user=db.get('db', 'user')
passwd=db.get('db', 'pass')
dbname=db.get('db', 'dbname')

class initCPUInfo:
    def __init__(self,initRow):
        self.initRow=initRow

    def initDataByRownum(self):
        # 打开数据库连接
        db = pymysql.connect(host,user,passwd,dbname)
        # 使用cursor()方法获取操作游标
        cursor = db.cursor()
        # SQL 插入语句
        sql = """select concat('{"name":"',createtime,'","value":["',createtime,'",',cpuload,']}')
                  from cpuinfo order by createtime desc limit %d;""" % \
                        (self.initRow)
        try:
            # 执行sql语句
            cursor.execute(sql)
            # 获取所有记录列表
            results = cursor.fetchall()
            # for row in results:
            #     content = row[0]
            #     # 打印结果
            #     print ("content=%s" % (content))
            # 提交到数据库执行
            db.commit()
            return results
        except Exception as e:
           # Rollback in case there is any error
           #print 'str(e):\t\t', str(e)
           print (str(e))
           db.rollback()
        # 关闭数据库连接
        db.close()

class getCPUInfo:
    def __init__(self,startTime):
        self.startTime=startTime

    def getDataByStartTime(self):
        # 打开数据库连接
        db = pymysql.connect(host,user,passwd,dbname)
        # 使用cursor()方法获取操作游标
        cursor = db.cursor()
        # SQL 插入语句
        sql = """select concat('{"name":"',createtime,'","value":["',createtime,'",',cpuload,']}')
                  from cpuinfo where createtime >= '%s';""" % \
                        (self.startTime)
        try:
            # 执行sql语句
            cursor.execute(sql)
            # 获取所有记录列表
            results = cursor.fetchall()
            # for row in results:
            #     content = row[0]
            #     # 打印结果
            #     print ("content=%s" % (content))
            # 提交到数据库执行
            db.commit()
            return results
        except Exception as e:
           # Rollback in case there is any error
           #print 'str(e):\t\t', str(e)
           print (str(e))
           db.rollback()
        # 关闭数据库连接
        db.close()

app = Flask(__name__)

data = {}

def Response_headers(content):
    resp = Response(content)
    resp.headers['Access-Control-Allow-Origin'] = '*'
    return resp

@app.route('/')
def hello_world():
    return Response_headers('hello world')

@app.route('/echarts')
def echarts():
    datas = {
        "data":[
            {"name":"allpe","num":60},
            {"name":"peach","num":45},
            {"name":"Pear","num":137},
            {"name":"avocado","num":22},
            {"name":"cantaloupe","num":64},
            {"name":"Banana","num":28},
            {"name":"Grape","num":80},
            {"name":"apricot","num":225},
            {"name":"HWZ","num":25}
        ]
    }
    content = json.dumps(datas)
    resp = Response_headers(content)
    return resp

@app.route('/echarts0')
def echarts0():

    #获取延迟5秒数据
    a=initCPUInfo(12)
    sqlResult = a.initDataByRownum()
    newStr = ''
    # print(sqlResult)
    for row in sqlResult:
        rowResult = str(row[0],encoding='utf-8')
        newStr = newStr + str(rowResult) + ','
        # print(str(row[0],encoding='utf-8'))
        # print ("content=%s" % ((newStr)))

    newStr = newStr[:-1]
    content = '''{"data": ['''+newStr+']}'
    # datas = {"data": [{"name":"1998-09-03 00:01:06","value":["1998-09-03 00:01:06",0.81]},{"name":"1998-09-03 00:01:07","value":["1998-09-03 00:01:07",0.05]},{"name":"1998-09-03 00:01:08","value":["1998-09-03 00:01:08",0.07]},{"name":"1998-09-03 00:01:09","value":["1998-09-03 00:01:09",0.84]},{"name":"1998-09-03 00:01:10","value":["1998-09-03 00:01:10",0.81]},{"name":"1998-09-03 00:01:11","value":["1998-09-03 00:01:11",0.54]},{"name":"1998-09-03 00:01:12","value":["1998-09-03 00:01:12",0.93]},{"name":"1998-09-03 00:01:13","value":["1998-09-03 00:01:13",0.57]},{"name":"1998-09-03 00:01:14","value":["1998-09-03 00:01:14",0.91]},{"name":"1998-09-03 00:01:15","value":["1998-09-03 00:01:15",0.16]},{"name":"1998-09-03 00:01:16","value":["1998-09-03 00:01:16",0.68]},{"name":"1998-09-03 00:01:17","value":["1998-09-03 00:01:17",0.00]},{"name":"1998-09-03 00:01:18","value":["1998-09-03 00:01:18",0.50]},{"name":"1998-09-03 00:01:19","value":["1998-09-03 00:01:19",0.46]},{"name":"1998-09-03 00:01:20","value":["1998-09-03 00:01:20",0.88]},{"name":"1998-09-03 00:01:21","value":["1998-09-03 00:01:21",0.05]},{"name":"1998-09-03 00:01:22","value":["1998-09-03 00:01:22",0.25]},{"name":"1998-09-03 00:01:23","value":["1998-09-03 00:01:23",0.34]},{"name":"1998-09-03 00:01:24","value":["1998-09-03 00:01:24",0.50]},{"name":"1998-09-03 00:01:25","value":["1998-09-03 00:01:25",0.93]},{"name":"1998-09-03 00:01:26","value":["1998-09-03 00:01:26",0.53]},{"name":"1998-09-03 00:01:27","value":["1998-09-03 00:01:27",0.05]},{"name":"1998-09-03 00:01:28","value":["1998-09-03 00:01:28",0.61]},{"name":"1998-09-03 00:01:29","value":["1998-09-03 00:01:29",0.72]},{"name":"1998-09-03 00:01:30","value":["1998-09-03 00:01:30",0.13]},{"name":"1998-09-03 00:01:31","value":["1998-09-03 00:01:31",0.20]},{"name":"1998-09-03 00:01:32","value":["1998-09-03 00:01:32",0.90]},{"name":"1998-09-03 00:01:33","value":["1998-09-03 00:01:33",0.30]},{"name":"1998-09-03 00:01:34","value":["1998-09-03 00:01:34",0.42]},{"name":"1998-09-03 00:01:35","value":["1998-09-03 00:01:35",0.08]},{"name":"1998-09-03 00:01:36","value":["1998-09-03 00:01:36",0.61]},{"name":"1998-09-03 00:01:37","value":["1998-09-03 00:01:37",0.34]},{"name":"1998-09-03 00:01:38","value":["1998-09-03 00:01:38",0.73]},{"name":"1998-09-03 00:01:39","value":["1998-09-03 00:01:39",0.46]},{"name":"1998-09-03 00:01:40","value":["1998-09-03 00:01:40",0.51]},{"name":"1998-09-03 00:01:41","value":["1998-09-03 00:01:41",0.44]},{"name":"1998-09-03 00:01:42","value":["1998-09-03 00:01:42",0.90]},{"name":"1998-09-03 00:01:43","value":["1998-09-03 00:01:43",0.16]},{"name":"1998-09-03 00:01:44","value":["1998-09-03 00:01:44",0.34]},{"name":"1998-09-03 00:01:45","value":["1998-09-03 00:01:45",0.76]},{"name":"1998-09-03 00:01:46","value":["1998-09-03 00:01:46",0.70]},{"name":"1998-09-03 00:01:47","value":["1998-09-03 00:01:47",0.70]},{"name":"1998-09-03 00:01:48","value":["1998-09-03 00:01:48",0.41]},{"name":"1998-09-03 00:01:49","value":["1998-09-03 00:01:49",0.07]},{"name":"1998-09-03 00:01:50","value":["1998-09-03 00:01:50",0.64]},{"name":"1998-09-03 00:01:51","value":["1998-09-03 00:01:51",0.84]},{"name":"1998-09-03 00:01:52","value":["1998-09-03 00:01:52",0.37]},{"name":"1998-09-03 00:01:53","value":["1998-09-03 00:01:53",0.76]},{"name":"1998-09-03 00:01:54","value":["1998-09-03 00:01:54",0.96]},{"name":"1998-09-03 00:01:55","value":["1998-09-03 00:01:55",0.35]},{"name":"1998-09-03 00:01:56","value":["1998-09-03 00:01:56",0.75]},{"name":"1998-09-03 00:01:57","value":["1998-09-03 00:01:57",0.78]},{"name":"1998-09-03 00:01:58","value":["1998-09-03 00:01:58",0.80]},{"name":"1998-09-03 00:01:59","value":["1998-09-03 00:01:59",0.30]},{"name":"1998-09-03 00:02:00","value":["1998-09-03 00:02:00",0.69]},{"name":"1998-09-03 00:02:01","value":["1998-09-03 00:02:01",0.25]},{"name":"1998-09-03 00:02:02","value":["1998-09-03 00:02:02",0.39]},{"name":"1998-09-03 00:02:03","value":["1998-09-03 00:02:03",0.36]},{"name":"1998-09-03 00:02:04","value":["1998-09-03 00:02:04",0.28]},{"name":"1998-09-03 00:02:05","value":["1998-09-03 00:02:05",0.23]},{"name":"1998-09-03 00:02:06","value":["1998-09-03 00:02:06",0.62]},{"name":"1998-09-03 00:02:07","value":["1998-09-03 00:02:07",0.06]},{"name":"1998-09-03 00:02:08","value":["1998-09-03 00:02:08",0.44]},{"name":"1998-09-03 00:02:09","value":["1998-09-03 00:02:09",0.71]},{"name":"1998-09-03 00:02:10","value":["1998-09-03 00:02:10",0.43]},{"name":"1998-09-03 00:02:11","value":["1998-09-03 00:02:11",0.31]},{"name":"1998-09-03 00:02:12","value":["1998-09-03 00:02:12",0.58]},{"name":"1998-09-03 00:02:13","value":["1998-09-03 00:02:13",0.43]},{"name":"1998-09-03 00:02:14","value":["1998-09-03 00:02:14",0.23]},{"name":"1998-09-03 00:02:15","value":["1998-09-03 00:02:15",0.23]},{"name":"1998-09-03 00:02:16","value":["1998-09-03 00:02:16",0.96]},{"name":"1998-09-03 00:02:17","value":["1998-09-03 00:02:17",0.16]},{"name":"1998-09-03 00:02:18","value":["1998-09-03 00:02:18",0.44]},{"name":"1998-09-03 00:02:19","value":["1998-09-03 00:02:19",0.42]},{"name":"1998-09-03 00:02:20","value":["1998-09-03 00:02:20",0.38]},{"name":"1998-09-03 00:02:21","value":["1998-09-03 00:02:21",0.59]},{"name":"1998-09-03 00:02:22","value":["1998-09-03 00:02:22",0.49]},{"name":"1998-09-03 00:02:23","value":["1998-09-03 00:02:23",0.78]},{"name":"1998-09-03 00:02:24","value":["1998-09-03 00:02:24",0.24]},{"name":"1998-09-03 00:02:25","value":["1998-09-03 00:02:25",0.45]},{"name":"1998-09-03 00:02:26","value":["1998-09-03 00:02:26",0.62]},{"name":"1998-09-03 00:02:27","value":["1998-09-03 00:02:27",0.69]},{"name":"1998-09-03 00:02:28","value":["1998-09-03 00:02:28",0.62]},{"name":"1998-09-03 00:02:29","value":["1998-09-03 00:02:29",0.66]},{"name":"1998-09-03 00:02:30","value":["1998-09-03 00:02:30",0.61]},{"name":"1998-09-03 00:02:31","value":["1998-09-03 00:02:31",0.95]},{"name":"1998-09-03 00:02:32","value":["1998-09-03 00:02:32",0.13]},{"name":"1998-09-03 00:02:33","value":["1998-09-03 00:02:33",0.78]},{"name":"1998-09-03 00:02:34","value":["1998-09-03 00:02:34",0.49]},{"name":"1998-09-03 00:02:35","value":["1998-09-03 00:02:35",0.50]},{"name":"1998-09-03 00:02:36","value":["1998-09-03 00:02:36",0.76]},{"name":"1998-09-03 00:02:37","value":["1998-09-03 00:02:37",0.16]},{"name":"1998-09-03 00:02:38","value":["1998-09-03 00:02:38",0.75]},{"name":"1998-09-03 00:02:39","value":["1998-09-03 00:02:39",0.06]},{"name":"1998-09-03 00:02:40","value":["1998-09-03 00:02:40",0.31]}]}
    print(content)

    # content = json.dumps(datas)  #dumps是将dict转化成str格式，loads是将str转化成dict格式，我之前用常量赋值给变量，这段代码是可以生效的，但是用变量赋值就不行，把这一段dumps用法去掉就行了，应该是不需要转换
    resp = Response_headers(content)
    return resp

@app.route('/echarts1')
def echarts1():

    newStr = ''
    oneSec = datetime.timedelta(seconds = 1)
    queryTime = datetime.datetime.now()-oneSec*5

    #获取延迟5秒数据
    a=getCPUInfo(queryTime)
    sqlResult = a.getDataByStartTime()
    # print(sqlResult)
    for row in sqlResult:
        rowResult = str(row[0],encoding='utf-8')
        newStr = newStr + str(rowResult) + ','
        # print(str(row[0],encoding='utf-8'))
        # print ("content=%s" % ((newStr)))

    newStr = newStr[:-1]
    content = '''{"data": ['''+newStr+']}'
    # datas = {"data": [{"name":"1998-09-03 00:01:06","value":["1998-09-03 00:01:06",0.81]},{"name":"1998-09-03 00:01:07","value":["1998-09-03 00:01:07",0.05]},{"name":"1998-09-03 00:01:08","value":["1998-09-03 00:01:08",0.07]},{"name":"1998-09-03 00:01:09","value":["1998-09-03 00:01:09",0.84]},{"name":"1998-09-03 00:01:10","value":["1998-09-03 00:01:10",0.81]},{"name":"1998-09-03 00:01:11","value":["1998-09-03 00:01:11",0.54]},{"name":"1998-09-03 00:01:12","value":["1998-09-03 00:01:12",0.93]},{"name":"1998-09-03 00:01:13","value":["1998-09-03 00:01:13",0.57]},{"name":"1998-09-03 00:01:14","value":["1998-09-03 00:01:14",0.91]},{"name":"1998-09-03 00:01:15","value":["1998-09-03 00:01:15",0.16]},{"name":"1998-09-03 00:01:16","value":["1998-09-03 00:01:16",0.68]},{"name":"1998-09-03 00:01:17","value":["1998-09-03 00:01:17",0.00]},{"name":"1998-09-03 00:01:18","value":["1998-09-03 00:01:18",0.50]},{"name":"1998-09-03 00:01:19","value":["1998-09-03 00:01:19",0.46]},{"name":"1998-09-03 00:01:20","value":["1998-09-03 00:01:20",0.88]},{"name":"1998-09-03 00:01:21","value":["1998-09-03 00:01:21",0.05]},{"name":"1998-09-03 00:01:22","value":["1998-09-03 00:01:22",0.25]},{"name":"1998-09-03 00:01:23","value":["1998-09-03 00:01:23",0.34]},{"name":"1998-09-03 00:01:24","value":["1998-09-03 00:01:24",0.50]},{"name":"1998-09-03 00:01:25","value":["1998-09-03 00:01:25",0.93]},{"name":"1998-09-03 00:01:26","value":["1998-09-03 00:01:26",0.53]},{"name":"1998-09-03 00:01:27","value":["1998-09-03 00:01:27",0.05]},{"name":"1998-09-03 00:01:28","value":["1998-09-03 00:01:28",0.61]},{"name":"1998-09-03 00:01:29","value":["1998-09-03 00:01:29",0.72]},{"name":"1998-09-03 00:01:30","value":["1998-09-03 00:01:30",0.13]},{"name":"1998-09-03 00:01:31","value":["1998-09-03 00:01:31",0.20]},{"name":"1998-09-03 00:01:32","value":["1998-09-03 00:01:32",0.90]},{"name":"1998-09-03 00:01:33","value":["1998-09-03 00:01:33",0.30]},{"name":"1998-09-03 00:01:34","value":["1998-09-03 00:01:34",0.42]},{"name":"1998-09-03 00:01:35","value":["1998-09-03 00:01:35",0.08]},{"name":"1998-09-03 00:01:36","value":["1998-09-03 00:01:36",0.61]},{"name":"1998-09-03 00:01:37","value":["1998-09-03 00:01:37",0.34]},{"name":"1998-09-03 00:01:38","value":["1998-09-03 00:01:38",0.73]},{"name":"1998-09-03 00:01:39","value":["1998-09-03 00:01:39",0.46]},{"name":"1998-09-03 00:01:40","value":["1998-09-03 00:01:40",0.51]},{"name":"1998-09-03 00:01:41","value":["1998-09-03 00:01:41",0.44]},{"name":"1998-09-03 00:01:42","value":["1998-09-03 00:01:42",0.90]},{"name":"1998-09-03 00:01:43","value":["1998-09-03 00:01:43",0.16]},{"name":"1998-09-03 00:01:44","value":["1998-09-03 00:01:44",0.34]},{"name":"1998-09-03 00:01:45","value":["1998-09-03 00:01:45",0.76]},{"name":"1998-09-03 00:01:46","value":["1998-09-03 00:01:46",0.70]},{"name":"1998-09-03 00:01:47","value":["1998-09-03 00:01:47",0.70]},{"name":"1998-09-03 00:01:48","value":["1998-09-03 00:01:48",0.41]},{"name":"1998-09-03 00:01:49","value":["1998-09-03 00:01:49",0.07]},{"name":"1998-09-03 00:01:50","value":["1998-09-03 00:01:50",0.64]},{"name":"1998-09-03 00:01:51","value":["1998-09-03 00:01:51",0.84]},{"name":"1998-09-03 00:01:52","value":["1998-09-03 00:01:52",0.37]},{"name":"1998-09-03 00:01:53","value":["1998-09-03 00:01:53",0.76]},{"name":"1998-09-03 00:01:54","value":["1998-09-03 00:01:54",0.96]},{"name":"1998-09-03 00:01:55","value":["1998-09-03 00:01:55",0.35]},{"name":"1998-09-03 00:01:56","value":["1998-09-03 00:01:56",0.75]},{"name":"1998-09-03 00:01:57","value":["1998-09-03 00:01:57",0.78]},{"name":"1998-09-03 00:01:58","value":["1998-09-03 00:01:58",0.80]},{"name":"1998-09-03 00:01:59","value":["1998-09-03 00:01:59",0.30]},{"name":"1998-09-03 00:02:00","value":["1998-09-03 00:02:00",0.69]},{"name":"1998-09-03 00:02:01","value":["1998-09-03 00:02:01",0.25]},{"name":"1998-09-03 00:02:02","value":["1998-09-03 00:02:02",0.39]},{"name":"1998-09-03 00:02:03","value":["1998-09-03 00:02:03",0.36]},{"name":"1998-09-03 00:02:04","value":["1998-09-03 00:02:04",0.28]},{"name":"1998-09-03 00:02:05","value":["1998-09-03 00:02:05",0.23]},{"name":"1998-09-03 00:02:06","value":["1998-09-03 00:02:06",0.62]},{"name":"1998-09-03 00:02:07","value":["1998-09-03 00:02:07",0.06]},{"name":"1998-09-03 00:02:08","value":["1998-09-03 00:02:08",0.44]},{"name":"1998-09-03 00:02:09","value":["1998-09-03 00:02:09",0.71]},{"name":"1998-09-03 00:02:10","value":["1998-09-03 00:02:10",0.43]},{"name":"1998-09-03 00:02:11","value":["1998-09-03 00:02:11",0.31]},{"name":"1998-09-03 00:02:12","value":["1998-09-03 00:02:12",0.58]},{"name":"1998-09-03 00:02:13","value":["1998-09-03 00:02:13",0.43]},{"name":"1998-09-03 00:02:14","value":["1998-09-03 00:02:14",0.23]},{"name":"1998-09-03 00:02:15","value":["1998-09-03 00:02:15",0.23]},{"name":"1998-09-03 00:02:16","value":["1998-09-03 00:02:16",0.96]},{"name":"1998-09-03 00:02:17","value":["1998-09-03 00:02:17",0.16]},{"name":"1998-09-03 00:02:18","value":["1998-09-03 00:02:18",0.44]},{"name":"1998-09-03 00:02:19","value":["1998-09-03 00:02:19",0.42]},{"name":"1998-09-03 00:02:20","value":["1998-09-03 00:02:20",0.38]},{"name":"1998-09-03 00:02:21","value":["1998-09-03 00:02:21",0.59]},{"name":"1998-09-03 00:02:22","value":["1998-09-03 00:02:22",0.49]},{"name":"1998-09-03 00:02:23","value":["1998-09-03 00:02:23",0.78]},{"name":"1998-09-03 00:02:24","value":["1998-09-03 00:02:24",0.24]},{"name":"1998-09-03 00:02:25","value":["1998-09-03 00:02:25",0.45]},{"name":"1998-09-03 00:02:26","value":["1998-09-03 00:02:26",0.62]},{"name":"1998-09-03 00:02:27","value":["1998-09-03 00:02:27",0.69]},{"name":"1998-09-03 00:02:28","value":["1998-09-03 00:02:28",0.62]},{"name":"1998-09-03 00:02:29","value":["1998-09-03 00:02:29",0.66]},{"name":"1998-09-03 00:02:30","value":["1998-09-03 00:02:30",0.61]},{"name":"1998-09-03 00:02:31","value":["1998-09-03 00:02:31",0.95]},{"name":"1998-09-03 00:02:32","value":["1998-09-03 00:02:32",0.13]},{"name":"1998-09-03 00:02:33","value":["1998-09-03 00:02:33",0.78]},{"name":"1998-09-03 00:02:34","value":["1998-09-03 00:02:34",0.49]},{"name":"1998-09-03 00:02:35","value":["1998-09-03 00:02:35",0.50]},{"name":"1998-09-03 00:02:36","value":["1998-09-03 00:02:36",0.76]},{"name":"1998-09-03 00:02:37","value":["1998-09-03 00:02:37",0.16]},{"name":"1998-09-03 00:02:38","value":["1998-09-03 00:02:38",0.75]},{"name":"1998-09-03 00:02:39","value":["1998-09-03 00:02:39",0.06]},{"name":"1998-09-03 00:02:40","value":["1998-09-03 00:02:40",0.31]}]}
    print(content)

    # content = json.dumps(datas)  #dumps是将dict转化成str格式，loads是将str转化成dict格式，我之前用常量赋值给变量，这段代码是可以生效的，但是用变量赋值就不行，把这一段dumps用法去掉就行了，应该是不需要转换
    resp = Response_headers(content)
    return resp

@app.errorhandler(403)
def page_not_found(error):
    content = json.dumps({"error_code": "403"})
    resp = Response_headers(content)
    return resp

@app.errorhandler(404)
def page_not_found(error):
    content = json.dumps({"error_code": "404"})
    resp = Response_headers(content)
    return resp

@app.errorhandler(400)
def page_not_found(error):
    content = json.dumps({"error_code": "400"})
    resp = Response_headers(content)
    return resp

@app.errorhandler(410)
def page_not_found(error):
    content = json.dumps({"error_code": "410"})
    resp = Response_headers(content)
    return resp

@app.errorhandler(500)
def page_not_found(error):
    content = json.dumps({"error_code": "500"})
    resp = Response_headers(content)
    return resp

if __name__ == '__main__':
    app.run(debug=True)#threaded=True,


